tname="wave",
idname="restID",
gname="state",
data=ck.twfe,
est_method="dr",
xformla = ~co_owned+h)
## DR by hand
ck %>%
mutate(w1 = state/mean(state),
w0 = ((1-state)*phat/(1-phat))/mean((1-state)*phat/(1-phat)) ) %>%
summarize(mean((w1-w0)*(Dy-Dra)))
## DR by hand
ck %>%
mutate(w1 = state/mean(state),
w0 = ((1-state)*phat/(1-phat))/mean((1-state)*phat/(1-phat)) ) %>%
summarize(mean((w1-w0)*(Dy-Dra)))
library(readstata13)
library(did)
library(bacondecomp)
library(fixest)
library(dplyr)
library(tidyr)
library(gridExtra)
library(ggplot2)
rm(list=ls())
policing <- read.dta13("datasets/underReport.dta")
p2017 <- read.csv("datasets/statePop2017.csv")
policing[policing$year==2017,]$pop_100000 <- p2017$pop2017/100000
policing$ln_police_homicide <- with(policing,log(police_homicide_fatal/pop_100000+1))
## First any issue with just using the full data staggered?
decomp <- bacon(ln_police_homicide ~ invLaw,
data = policing[!is.na(policing$ln_police_homicide),],
id_var = "state",
time_var = "year")
policing <- policing %>%
mutate(G= min(ifelse(invLaw==0, Inf,
pmin(year*invLaw))), .by=state)
policing %>%
with(., table(G, year))
## Let's consider the ATT(t) for the 2015 group with controls for
policing15 <- policing %>%
filter( G >= 2015) %>% #last pre treated and no already treated
mutate(treated = 1*(G==2015))
table(policing15$treated)
## let's start by looking at balance among observables
policing15  %>%
filter(year==2014) %>%
select(treated,
std_squire_capacity, ## state "capacity"
termEnact, ## term limits
std_med_income, ## income
std_employees, ## employees
std_police_ideal, ## police ideal point
std_black, ## Black population
demGov, #Dem gov
demLeg, #unified dem leg
repLeg) %>% #unified gop leg
reframe(across(everything(),
.fns=list(mean, sd)),
.by=c(treated)) %>%
pivot_longer(!c(treated)) %>%
pivot_wider(names_from=c(treated),
names_prefix = "Group") %>%
mutate(Stat=rep(c("mean", "sd"), 9),
var=rep(1:9, each=2),
D=ifelse(Stat=="mean",
Group1-Group0,
sqrt((Group1^2+Group0^2)/2))) %>%
mutate(Norm = D[1]/D[2], .by=var) %>%
filter(Stat=="mean") %>%
select(!c(var, D, Stat))
### ATT(t)
UNatt <-RAatt <- IPWatt <- DRatt <-rep(0, 5)
i <- 0
for(t in 2013:2017){
i <- i+1
means <- policing15 %>%
filter(year %in% c(2014, t)) %>%
summarize(ybar=mean(ln_police_homicide, na.rm=TRUE),
.by=c(treated,year))
UNatt[i] <- (means[means$treated==1 & means$year==t,]$ybar-
means[means$treated==1 & means$year==2014,]$ybar)-
(means[means$treated==0 & means$year==t,]$ybar-
means[means$treated==0 & means$year==2014,]$ybar)
Z <- policing15 %>%
filter(year ==2014) %>%
select(treated,
std_squire_capacity, ## state "capacity"
termEnact, ## term limits
std_med_income, ## income
std_employees, ## employees
std_police_ideal, ## police ideal point
std_black, ## Black population
demGov, #Dem gov
demLeg, #unified dem leg
repLeg)
Z$Dy <- policing15$ln_police_homicide[policing15$year==t]-
policing15$ln_police_homicide[policing15$year==2014]
ra <- lm(Dy~std_squire_capacity+termEnact+std_med_income+
std_employees+std_police_ideal+std_black+
demGov+demLeg+repLeg, data=Z, subset=treated==0)
Z$Dra <- predict(ra, newdata=Z)
RAatt[i]  <- Z %>%
filter(treated==1) %>%
summarize(mean(Dy-Dra)) %>%
as.numeric()
ip <- glm(treated~std_squire_capacity+termEnact+std_med_income+
std_employees+std_police_ideal+std_black+
demGov+demLeg+repLeg, data=Z,family=binomial("logit"))
summary(ip)
Z$phat <- predict(ip,
newdata=Z,
type="response")
IPWatt[i] <- Z %>%
mutate(w1 = treated/mean(treated),
w0 = ((1-treated)*phat/(1-phat))/mean((1-treated)*phat/(1-phat)) ) %>%
summarize(mean((w1-w0)*(Dy))) %>%
as.numeric()
DRatt[i] <- Z %>%
mutate(w1 = treated/mean(treated),
w0 = ((1-treated)*phat/(1-phat))/mean((1-treated)*phat/(1-phat)) ) %>%
summarize(mean((w1-w0)*(Dy-Dra))) %>%
as.numeric()
}
cbind(2013:2017,
UNatt, RAatt, IPWatt, DRatt)
cbind(2013:2017,
UNatt, RAatt, IPWatt, DRatt)
policing15 <- policing15 %>%
mutate(time.m2 = ifelse(treated==1&year==2013, 1,0),,
time0 = ifelse(treated==1&year==2015, 1,0),
time1 = ifelse(treated==1&year==2016, 1,0),
time2 = ifelse(treated==1&year==2017, 1,0))
event.fit <-feols(ln_police_homicide~time.m2+time0+time1+time2
|state+year,
data=policing15)
event.fit ## match UNatt
event.fit2 <-feols(ln_police_homicide~time.m2+time0+time1+time2+
std_squire_capacity+termEnact+
std_med_income+
std_employees+
std_police_ideal+std_black+
demGov+demLeg+repLeg
|state+year,
data=policing15)
event.fit2 ## matches nothing!
event.fit2 ## matches nothing!
cbind(2013:2017,
UNatt, RAatt, IPWatt, DRatt)
policing15$stateCode <- as.numeric(as.factor(policing15$state))
policing15$treated <- 2015*(policing15$G==2015)
unAtt <- att_gt(yname = "ln_police_homicide",
tname="year",
idname="stateCode",
gname="treated",
base_period = "universal",
data=policing15)
attRA <- att_gt(yname = "ln_police_homicide",
tname="year",
idname="stateCode",
base_period = "universal",
gname="treated",
est_method="reg",
xformla=~std_squire_capacity+termEnact+
std_med_income+
std_employees+
std_police_ideal+std_black+
demGov+demLeg+repLeg,
data=policing15)
attIPW <- att_gt(yname = "ln_police_homicide",
tname="year",
idname="stateCode",
gname="treated",
est_method="ipw",
base_period = "universal",
xformla=~std_squire_capacity+termEnact+
std_med_income+
std_employees+
std_police_ideal+std_black+
demGov+demLeg+repLeg,
data=policing15)
attDR <- att_gt(yname = "ln_police_homicide",
tname="year",
idname="stateCode",
gname="treated",
est_method="dr",
base_period = "universal",
xformla=~std_squire_capacity+termEnact+
std_med_income+
std_employees+
std_police_ideal+std_black+
demGov+demLeg+repLeg,
data=policing15)
attDR
attIPW
cbind(2013:2017,
UNatt, RAatt, IPWatt, DRatt)
attRA
cbind(2013:2017,
UNatt, RAatt, IPWatt, DRatt)
attIPW <- att_gt(yname = "ln_police_homicide",
tname="year",
idname="stateCode",
gname="treated",
est_method="ipw",
base_period = "universal",
xformla=~std_squire_capacity+termEnact+
std_med_income+
std_employees+
std_police_ideal+std_black+
demGov+demLeg+repLeg,
data=policing15)
grid.arrange(
ggdid(unAtt)+ggtitle("No controls"),
ggdid(attRA)+ggtitle("Reg. Adjust."),
ggdid(attIPW)+ggtitle("IPW"),
ggdid(attDR)+ggtitle("Double robust"),
nrow=2)
library(mixtape)
library(ggplot2)
library(did)
library(bacondecomp)
library(fixest)
library(dplyr)
library(gridExtra)
rm(list=ls())
data("castle_doctrine_2000_2010")
castle <- castle_doctrine_2000_2010
castle <- castle %>%
mutate(across(all_of(c("homicide",
"exp_subsidy",
"exp_pubwelfare",
"police", "income",
"prisoner", "lagprisoner")),
.fns = log,
.names="l_{col}"),
post=1*(cdl==1)) %>%
mutate(trend = 1:length(state), .by=state)
ctrl <-  ~ poverty+
unemployrt+
l_income+
l_exp_pubwelfare
library(mixtape)
library(ggplot2)
library(did)
library(bacondecomp)
library(fixest)
library(dplyr)
library(gridExtra)
rm(list=ls())
data("castle_doctrine_2000_2010")
castle <- castle_doctrine_2000_2010
castle <- castle %>%
mutate(across(all_of(c("homicide",
"exp_subsidy",
"exp_pubwelfare",
"police", "income",
"prisoner", "lagprisoner")),
.fns = log,
.names="l_{col}"),
post=1*(cdl==1)) %>%
mutate(trend = 1:length(state), .by=state)
ctrl <-  ~ poverty+
unemployrt+
l_income+
l_exp_pubwelfare
castle$G <- castle$effyear
castle$G[is.na(castle$G)] <- Inf
i <- 0
castle %>%
filter( (G ==g  | G > max(g,t)) &
(year %in% c(t, g-1))) %>%
mutate(G = ifelse(G==g, g, 0))%>%
summarize(ybar=mean(l_homicide, na.rm=TRUE),
.by=c(G,year))
g <- 2006
t <- 2009
castle %>%
filter( (G ==g  | G > max(g,t)) &
(year %in% c(t, g-1))) %>%
mutate(G = ifelse(G==g, g, 0))%>%
summarize(ybar=mean(l_homicide, na.rm=TRUE),
.by=c(G,year))
(means[means$G==g & means$year==t,]$ybar-
means[means$G==g & means$year==g-1,]$ybar)-
(means[means$G==0 & means$year==t,]$ybar-
means[means$G==0 & means$year==g-1,]$ybar)
means <- castle %>%
filter( (G ==g  | G > max(g,t)) &
(year %in% c(t, g-1))) %>%
mutate(G = ifelse(G==g, g, 0))%>%
summarize(ybar=mean(l_homicide, na.rm=TRUE),
.by=c(G,year))
UNatt[i,j] <- (means[means$G==g & means$year==t,]$ybar-
means[means$G==g & means$year==g-1,]$ybar)-
(means[means$G==0 & means$year==t,]$ybar-
means[means$G==0 & means$year==g-1,]$ybar)
astle %>%
mutate(treated=1*(G==g))%>%
filter( (G ==g  | G > max(g,t)) &
(year == min(t,  g-1))) %>%
select(treated,  state, year, G,
poverty,
unemployrt,
l_income,
l_exp_pubwelfare)
castle %>%
mutate(treated=1*(G==g))%>%
filter( (G ==g  | G > max(g,t)) &
(year == min(t,  g-1))) %>%
select(treated,  state, year, G,
poverty,
unemployrt,
l_income,
l_exp_pubwelfare)
Z <- castle %>%
mutate(treated=1*(G==g))%>%
filter( (G ==g  | G > max(g,t)) &
(year == min(t,  g-1))) %>%
select(treated,  state, year, G,
poverty,
unemployrt,
l_income,
l_exp_pubwelfare)
Z.Dy <- castle%>%
mutate(treated=1*(G==g))%>%
filter( (G ==g  | G > max(g,t)) &
(year %in% c(t,g-1))) %>%
select(state,year,l_homicide)
Z$Dy <- Z.Dy$l_homicide[Z.Dy$year==t]-
Z.Dy$l_homicide[Z.Dy$year==g-1]
ra <- lm(update(ctrl, Dy~.),
data=Z, subset=treated==0)
ra
Z$Dra <- predict(ra, newdata=Z)
RAatt[i,j]  <- Z %>%
filter(treated==1) %>%
summarize(mean(Dy-Dra)) %>%
as.numeric()
Z %>%
filter(treated==1) %>%
summarize(mean(Dy-Dra)) %>%
as.numeric()
ip <- glm(update(ctrl, treated~.),
data=Z,family=binomial("logit"))
ip
Z$phat <- predict(ip,
newdata=Z,
type="response")
## note that did returns an NA if we get
NAtracker[i,j] <- ifelse(any(Z$phat>0.999),
NA, 1)
Z %>%
mutate(w1 = treated/mean(treated),
w0 = ((1-treated)*phat/(1-phat))/mean((1-treated)*phat/(1-phat)) ) %>%
summarize(mean((w1-w0)*(Dy))) %>%
as.numeric()
UNatt <-RAatt <- IPWatt <- DRatt <-
NAtracker<- matrix(0, 5, 11)
i <- 0
for(g in sort(unique(castle$effyear))){
i <- i +1
j <- 0
for(t in 2000:2010){
j <- j+1
means <- castle %>%
filter( (G ==g  | G > max(g,t)) &
(year %in% c(t, g-1))) %>%
mutate(G = ifelse(G==g, g, 0))%>%
summarize(ybar=mean(l_homicide, na.rm=TRUE),
.by=c(G,year))
UNatt[i,j] <- (means[means$G==g & means$year==t,]$ybar-
means[means$G==g & means$year==g-1,]$ybar)-
(means[means$G==0 & means$year==t,]$ybar-
means[means$G==0 & means$year==g-1,]$ybar)
Z <- castle %>%
mutate(treated=1*(G==g))%>%
filter( (G ==g  | G > max(g,t)) &
(year == min(t,  g-1))) %>%
select(treated,  state, year, G,
poverty,
unemployrt,
l_income,
l_exp_pubwelfare)
Z.Dy <- castle%>%
mutate(treated=1*(G==g))%>%
filter( (G ==g  | G > max(g,t)) &
(year %in% c(t,g-1))) %>%
select(state,year,l_homicide)
Z$Dy <- Z.Dy$l_homicide[Z.Dy$year==t]-
Z.Dy$l_homicide[Z.Dy$year==g-1]
ra <- lm(update(ctrl, Dy~.),
data=Z, subset=treated==0)
Z$Dra <- predict(ra, newdata=Z)
RAatt[i,j]  <- Z %>%
filter(treated==1) %>%
summarize(mean(Dy-Dra)) %>%
as.numeric()
ip <- glm(update(ctrl, treated~.),
data=Z,family=binomial("logit"))
Z$phat <- predict(ip,
newdata=Z,
type="response")
## note that did returns an NA if we get
NAtracker[i,j] <- ifelse(any(Z$phat>0.999),
NA, 1)
##
IPWatt[i,j] <- Z %>%
mutate(w1 = treated/mean(treated),
w0 = ((1-treated)*phat/(1-phat))/mean((1-treated)*phat/(1-phat)) ) %>%
summarize(mean((w1-w0)*(Dy))) %>%
as.numeric()
DRatt[i,j] <- Z %>%
mutate(w1 = treated/mean(treated),
w0 = ((1-treated)*phat/(1-phat))/mean((1-treated)*phat/(1-phat)) ) %>%
summarize(mean((w1-w0)*(Dy-Dra))) %>%
as.numeric()
}
}
colnames(UNatt) <- colnames(RAatt) <-
colnames(IPWatt) <- colnames(DRatt) <- paste0("year", 2000:2010)
rownames(UNatt) <- rownames(RAatt) <-
rownames(IPWatt) <- rownames(DRatt) <- paste0("treated", 2005:2009)
UNatt
RAatt
IPWatt
DRatt
plot.df <- data.frame(year=2000:2010,
group=rep(2005:2009, each=11),
ATTgt = c(t(UNatt), t(RAatt), t(IPWatt),t(DRatt) ),
Strategy=rep(c("No controls", "RA", "IPW", "DR"), each=55))
ggplot(plot.df)+
geom_line(aes(x=year, y=ATTgt, color=Strategy))+
geom_point(aes(x=year, y=ATTgt, color=Strategy, shape=Strategy))+
facet_wrap(~group)+
geom_vline(aes(xintercept = group), linetype="dotted")+
scale_x_continuous(breaks=seq(2000, 2010, by=3))+
ylab("ATT(g,t)")+
theme_bw(14)+
theme(legend.position = "bottom")
att.names <- expand.grid(2005:2009,2000:2010)%>%
arrange(Var1,Var2) %>%
mutate(name=paste0(Var1, ".", Var2)) %>%
select(name) %>%
unlist()
cannedRA <- att_gt("l_homicide",
tname = "year",
idname = "sid",
gname = "G",
xformla = ~ poverty+
unemployrt+
l_income+
l_exp_pubwelfare,
control_group="notyettreated",
base_period = "universal",
est_method = "reg",
data = castle)
RA.est <- cbind(cannedRA$att,
c(t(RAatt)))
rownames(RA.est) <- att.names
print(RA.est)
cannedIPW <- att_gt("l_homicide",
tname = "year",
idname = "sid",
gname = "G",
xformla = ~ poverty+
unemployrt+
l_income+
l_exp_pubwelfare,
control_group="notyettreated",
base_period = "universal",
est_method = "ipw",
data = castle)
IPW.est <- cbind(cannedIPW$att,
c(t(IPWatt)),
c(t(IPWatt*NAtracker)))
rownames(IPW.est) <- att.names
print(IPW.est)
cannedDR <- att_gt("l_homicide",
tname = "year",
idname = "sid",
gname = "G",
xformla = ~ poverty+
unemployrt+
l_income+
l_exp_pubwelfare,
control_group="notyettreated",
base_period = "universal",
est_method = "dr",
data = castle)
DRest <- cbind(cannedDR$att,
c(t(DRatt)),
c(t(DRatt*NAtracker)))
row.names(DRest) <- att.names
print(DRest)
g1 <- ggdid(aggte(cannedDR, "dynamic",na.rm=TRUE))+ggtitle("Double robust")
g2 <- ggdid(aggte(cannedRA, "dynamic",na.rm=TRUE))+ggtitle("Regression adjusted")
g3 <- ggdid(aggte(cannedIPW, "dynamic",na.rm=TRUE))+ggtitle("IPW")
grid.arrange(g1,g2,g3, nrow=3)
weights <- castle %>%
mutate(time2=year-G) %>%
summarize(obs=length(l_homicide), .by=c(G, time2)) %>%
mutate(size=sum(obs), .by=time2) %>%
mutate(weight=obs/size) %>%
arrange(G,time2) %>%
filter(!is.infinite(G))
weights <- split(weights$weight, weights$time2)
ests <- split(cannedRA$att, factor(cannedRA$t-cannedRA$group))
cbind(mapply(weighted.mean,
x=ests,
w=weights),
aggte(cannedRA, "dynamic",na.rm=TRUE)$att.egt)
