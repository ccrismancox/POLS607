policing <- read.dta13("Rcode/datasets/underReport.dta")
policing$ln_police_homicide <- with(policing,log(police_homicide_fatal/pop_100000+1))
feols(ln_police_homicide~ invLaw|state + year, data = policing)
bacon(ln_police_homicide ~ invLaw,
data = data,
id_var = "state",
time_var = "year")
bacon(ln_police_homicide ~ invLaw,
data = policing,
id_var = "state",
time_var = "year")
summary(policing)
bacon(ln_police_homicide ~ invLaw,
data = policing[!is.na()ln_police_homicide],
bacon(ln_police_homicide ~ invLaw,
data = policing[!is.na(ln_police_homicide),],
id_var = "state",
time_var = "year")
bacon(ln_police_homicide ~ invLaw,
data = policing[!is.na(policing$ln_police_homicide),],
id_var = "state",
time_var = "year")
decomp <- bacon(ln_police_homicide ~ invLaw,
data = policing[!is.na(policing$ln_police_homicide),],
id_var = "state",
time_var = "year")
feols(ln_police_homicide~ invLaw|state + year, data = policing)
decomp <- bacon(ln_police_homicide ~ invLaw,
data = policing[!is.na(policing$ln_police_homicide),],
id_var = "state",
time_var = "year")
feols(ln_police_homicide~ invLaw|state + year, data = policing)
policing %>% filter(invLaw==1)
policing %>%
filter(invLaw==1) %>%
summary()
policing %>%
filter(invLaw==1) %>%
table(state,year)
policing %>%
filter(invLaw==1) %>%
with(., table(state,year))
policing %>%
mutate(G= ifelse(all(invLaw==0), Inf, pmax(min(invLaw*year), 0)), .by=state) %>%
filter(state=="NEW YORK")
policing %>%
mutate(G= ifelse(all(invLaw==0), Inf, pmax(min(invLaw*year), 0)), .by=state) %>%
filter(state=="NEW YORK") %>%
select(year, invLaw, G)
policing %>%
mutate(G= ifelse(all(invLaw==0), Inf, pmax(invLaw*year, 0)), .by=state) %>%
filter(state=="NEW YORK") %>%
select(year, invLaw, G)
policing %>%
mutate(G= ifelse(all(invLaw==0), Inf, invLaw*year), .by=state) %>%
filter(state=="NEW YORK") %>%
select(year, invLaw, G)
policing %>%
mutate(G= ifelse(all(invLaw==0), Inf, year), .by=state) %>%
filter(state=="NEW YORK") %>%
select(year, invLaw, G)
policing %>%
mutate(G= ifelse(all(invLaw==0), Inf, year*invLaw), .by=state) %>%
filter(state=="NEW YORK") %>%
select(year, invLaw, G)
policing %>%
mutate(G= ifelse(invLaw==0, Inf, year*invLaw), .by=state) %>%
filter(state=="NEW YORK") %>%
select(year, invLaw, G)
policing %>%
mutate(G= ifelse(invLaw==0, Inf, pmin(year*invLaw)), .by=state) %>%
filter(state=="NEW YORK") %>%
select(year, invLaw, G)
policing %>%
mutate(G= ifelse(invLaw==0, Inf, min(year*invLaw)), .by=state) %>%
filter(state=="NEW YORK") %>%
select(year, invLaw, G)
policing %>%
mutate(G= ifelse(invLaw==0, Inf, min(pmin(year*invLaw))), .by=state) %>%
filter(state=="NEW YORK") %>%
select(year, invLaw, G)
policing %>%
mutate(G= ifelse(invLaw==0, Inf, pmin(year*invLaw)), .by=state) %>%
filter(state=="NEW YORK") %>%
select(year, invLaw, G)
policing %>%
mutate(G= min(ifelse(invLaw==0, Inf, pmin(year*invLaw))),   .by=state) %>%
filter(state=="NEW YORK") %>%
select(year, invLaw, G)
policing %>%
mutate(G= min(ifelse(invLaw==0, Inf, pmin(year*invLaw))), .by=state) %>%
filter(state=="TEXAS") %>%
select(year, invLaw, G)
policing %>%
mutate(G= min(ifelse(invLaw==0, Inf, pmin(year*invLaw))), .by=state) %>%
filter(state=="CALIFORNIA") %>%
select(year, invLaw, G)
policing %>%
mutate(G= min(ifelse(invLaw==0, Inf, pmin(year*invLaw))), .by=state) %>%
with(., table(G, year))
head(policing)
## Let's consider the ATT(t) for the 2015 group with controls for
policing15 <- policing %>%
filter(year >=2014 & G >= 2015) #last pre treated and no already treated
policing <- policing %>%
mutate(G= min(ifelse(invLaw==0, Inf, pmin(year*invLaw))), .by=state)
policing %>%
with(., table(G, year))
## Let's consider the ATT(t) for the 2015 group with controls for
policing15 <- policing %>%
filter(year >=2014 & G >= 2015) #last pre treated and no already treated
mutate(treated = 1*(G==2015)
## Let's consider the ATT(t) for the 2015 group with controls for
policing15 <- policing %>%
filter(year >=2014 & G >= 2015) %>% #last pre treated and no already treated
mutate(treated = 1*(G==2015))
policing15
policing15
table(policing15$treated)
colnames(policing)
attributes(policing)
?across
## let's start by looking at balance among observeables
policing  %>%
select(state,
year,
std_squire_capacity, ## state "capacity"
termEnact,
std_med_income,
std_employees,
std_police_ideal,
std_black,
demGov,
demLeg,
repLeg) %>%
summarize(across(, .fns=mean), .by=c(state,year))
## let's start by looking at balance among observeables
policing  %>%
select(state,
year,
std_squire_capacity, ## state "capacity"
termEnact,
std_med_income,
std_employees,
std_police_ideal,
std_black,
demGov,
demLeg,
repLeg) %>%
summarize(across(everything(), .fns=mean), .by=c(state,year))
## let's start by looking at balance among observeables
policing  %>%
select(state,
year,
std_squire_capacity, ## state "capacity"
termEnact,
std_med_income,
std_employees,
std_police_ideal,
std_black,
demGov,
demLeg,
repLeg) %>%
summarize(across(everything(), .fns=mean), .by=c(state,year))
## let's start by looking at balance among observeables
policing  %>%
select(G,
year,
std_squire_capacity, ## state "capacity"
termEnact,
std_med_income,
std_employees,
std_police_ideal,
std_black,
demGov,
demLeg,
repLeg) %>%
summarize(across(everything(), .fns=mean), .by=c(G,year))
## let's start by looking at balance among observeables
policing  %>%
select(G,
year,
std_squire_capacity, ## state "capacity"
termEnact,
std_med_income,
std_employees,
std_police_ideal,
std_black,
demGov,
demLeg,
repLeg) %>%
summarize(across(everything(), .fns=mean), .by=c(G,year))
## let's start by looking at balance among observeables
policing  %>%
select(treated,
year,
std_squire_capacity, ## state "capacity"
termEnact,
std_med_income,
std_employees,
std_police_ideal,
std_black,
demGov,
demLeg,
repLeg) %>%
summarize(across(everything(), .fns=mean), .by=c(treated,year))
policing15 <- policing %>%
filter(year >=2014 & G >= 2015) %>% #last pre treated and no already treated
mutate(treated = 1*(G==2015))
table(policing15$treated)
## let's start by looking at balance among observeables
policing  %>%
select(treated,
year,
std_squire_capacity, ## state "capacity"
termEnact,
std_med_income,
std_employees,
std_police_ideal,
std_black,
demGov,
demLeg,
repLeg) %>%
summarize(across(everything(), .fns=mean), .by=c(treated,year))
## let's start by looking at balance among observeables
policing15  %>%
select(treated,
year,
std_squire_capacity, ## state "capacity"
termEnact,
std_med_income,
std_employees,
std_police_ideal,
std_black,
demGov,
demLeg,
repLeg) %>%
summarize(across(everything(), .fns=mean), .by=c(treated,year))
## let's start by looking at balance among observeables
policing  %>%
select(treated,
year,
std_squire_capacity, ## state "capacity"
termEnact,
std_med_income,
std_employees,
std_police_ideal,
std_black,
demGov,
demLeg,
repLeg) %>%
summarize(across(everything(), .fns=mean), .by=c(treated,year))
policing15  %>%
select(treated,
year,
std_squire_capacity, ## state "capacity"
termEnact,
std_med_income,
std_employees,
std_police_ideal,
std_black,
demGov,
demLeg,
repLeg) %>%
summarize(across(everything(), .fns=mean), .by=c(treated,year))
policing %>%
with(., table(G, year))
policing %>% filter(G==2015)
ck.twfe
ck.twfe$h == rep(ck$h, 2)
ck.twfe$h - rep(ck$h, 2)
ck.twfe$h - rep(ck$h, each=2)
source("~/Dropbox/Teaching/PanelData/Spring2025/website/CodeExamples/did_cardKrueger.r", echo=TRUE)
setwd("~/Dropbox/Teaching/PanelData/Spring2025/website/CodeExamples")
source("~/Dropbox/Teaching/PanelData/Spring2025/website/CodeExamples/did_cardKrueger.r", echo=TRUE)
# library(remotes)
# install_github("johnson-shuffle/mixtape")
library(mixtape)
library(ggplot2)
library(did)
library(bacondecomp)
library(fixest)
library(dplyr)
rm(list=ls())
data("castle_doctrine_2000_2010")
castle <- castle_doctrine_2000_2010
castle <- castle %>%
mutate(across(all_of(c("homicide", "exp_subsidy", "exp_pubwelfare",
"police", "income", "prisoner", "lagprisoner")),
.fns = log,
.names="l_{col}"),
post=1*(cdl==1)) %>%
mutate(trend = 1:length(state), .by=state)
ggplot(castle %>%
summarize(Homicide = mean(l_homicide),
.by=c(effyear, year))) +
geom_line(aes(x=year, y=Homicide, color=factor(effyear)))+
scale_x_continuous(breaks=2000:2010)+
geom_vline(aes(xintercept=effyear, color=factor(effyear)),
linetype="dotted")+
theme_bw(14)+
theme(legend.position = "bottom")+
labs(color = "Treatment year")
### Parallel trends 1
### ATT(g,t)
castle$G <- castle$effyear
castle$G[is.na(castle$G)] <- 0
att <- matrix(0, 5, 11)
i <- 0
for(g in sort(unique(castle$effyear))){
i <- i +1
j <- 0
for(t in 2000:2010){
j <- j+1
means <- castle %>%
filter(G %in% c(0,g) & year %in% c(t, g-1)) %>%
summarize(ybar=mean(l_homicide, na.rm=TRUE),
.by=c(G,year))
att[i,j] <- (means[means$G==g & means$year==t,]$ybar-
means[means$G==g & means$year==g-1,]$ybar)-
(means[means$G==0 & means$year==t,]$ybar-
means[means$G==0 & means$year==g-1,]$ybar)
}
}
colnames(att) <- paste0("year", 2000:2010)
rownames(att) <- paste0("treated", 2005:2009)
att
### Parallel trends 2
### ATT(g, t)
att2 <- matrix(0, 5, 11)
i <- 0
for(g in sort(unique(castle$effyear))){
i <- i +1
j <- 0
for(t in 2000:2010){
j <- j+1
means <- castle %>%
mutate(G = ifelse(G==0, Inf, G)) %>%
filter( (G ==g  | G > max(g,t)) &
(year %in% c(t, g-1))) %>%
mutate(G = ifelse(G==g, g, 0))%>%
summarize(ybar=mean(l_homicide, na.rm=TRUE),
.by=c(G,year))
att2[i,j] <- (means[means$G==g & means$year==t,]$ybar-
means[means$G==g & means$year==g-1,]$ybar)-
(means[means$G==0 & means$year==t,]$ybar-
means[means$G==0 & means$year==g-1,]$ybar)
}
}
colnames(att2) <- paste0("year", 2000:2010)
rownames(att2) <- paste0("treated", 2005:2009)
att2
### Parallel trends 3
### ATT(g.t)
att3 <- matrix(0, 5, 11)
i <- 0
for(g in sort(unique(castle$effyear))){
i <- i +1
j <- 0
for(t in 2000:2010){
j <- j+1
att3[i,j] <- castle %>%
mutate(cohort=ifelse(is.na(effyear), 10000, effyear),
Ig = 1*(cohort==g) + 2*(cohort>t &cohort!=g),
const=1,
pre=ifelse(year < g, 1, NA)) %>%
mutate(ybar = mean(l_homicide*pre, na.rm=TRUE), .by=state) %>%
filter(year ==t & Ig > 0) %>%
summarize(Dt = mean(l_homicide - ybar), .by=Ig) %>%
summarize(att3 = diff(Dt)) %>%
as.numeric()
}
}
colnames(att3) <- paste0("year", 2000:2010)
rownames(att3) <- paste0("treated", 2005:2009)
att3
plot.df <- data.frame(year=2000:2010,
group=rep(2005:2009, each=11),
ATTgt = c(t(att), t(att2), t(att3)),
Assumptions=rep(1:3, each=55))
ggplot(plot.df)+
geom_line(aes(x=year, y=ATTgt, color=factor(Assumptions)))+
geom_point(aes(x=year, y=ATTgt, color=factor(Assumptions), shape=factor(Assumptions)))+
facet_wrap(~group)+
geom_vline(aes(xintercept = group), linetype="dotted")+
scale_x_continuous(breaks=seq(2000, 2010, by=3))+
ylab("ATT(g,t)")+
theme_bw(14)+
theme(legend.position = "bottom")+
labs(color = "PT Assumption", shape="PT Assumption")
##
plot.df <- data.frame(year=2000:2010,
group=rep(2005:2009, each=11),
ATTgt = c(t(att), t(att2), t(att3)),
Assumptions=rep(1:3, each=55))
ggplot(plot.df)+
geom_line(aes(x=year, y=ATTgt, color=factor(Assumptions)))+
geom_point(aes(x=year, y=ATTgt, color=factor(Assumptions), shape=factor(Assumptions)))+
facet_wrap(~group)+
geom_vline(aes(xintercept = group), linetype="dotted")+
scale_x_continuous(breaks=seq(2000, 2010, by=3))+
ylab("ATT(g,t)")+
theme_bw(14)+
theme(legend.position = "bottom")+
labs(color = "PT Assumption", shape="PT Assumption")
## The canned version
castle <- castle %>%
mutate(ifelse(G==0, Inf, G))
## matches att_1(g,t)
att_gt("l_homicide",
tname = "year",
idname = "sid",
gname = "G",
control_group="nevertreated",
base_period = "universal",
data = castle)
## matches att_2(g,t)
att_gt("l_homicide",
tname = "year",
idname = "sid",
gname = "G",
control_group="notyettreated",
base_period = "universal",
data = castle)
## The canned version
castle <- castle %>%
mutate(ifelse(G==0, Inf, G))
## matches att_1(g,t)
att1.canned <- att_gt("l_homicide",
tname = "year",
idname = "sid",
gname = "G",
control_group="nevertreated",
base_period = "universal",
data = castle)
## matches att_2(g,t)
att2.canned <- att_gt("l_homicide",
tname = "year",
idname = "sid",
gname = "G",
control_group="notyettreated",
base_period = "universal",
data = castle)
g3 <- ggdid(att2.canned)
g3 <- ggdid(att2.canned)
g3
g2
g3 <- ggdid(aggte(att2.canned, "dynamic"))
g3
g2
grid.arrange(g1,g2,g3,g4, nrow=2)
library(gridExtra)
source("~/Dropbox/Teaching/PanelData/Spring2025/website/CodeExamples/did_castle.r", echo=TRUE)
g1 <- ggplot(eventPlot)+
geom_pointrange(aes(x=time, y=effect, ymin=lo, ymax=hi))+
geom_hline(aes(yintercept = 0)) +
theme_bw(14)+
xlab("Time")+
scale_x_continuous(breaks=-9:5)+
ylab("Marginal effect")+
geom_vline(aes(xintercept = 0), linetype="dashed", alpha=.4)+
ggtitle("'Classic' event study")
g1
eventPlot.sa <- data.frame(time=c(-9:-1, 1:5,0),
effect= c(sa$coeftable[,1],0),
hi = c(confint(sa)[1:14,1],0),
lo = c(confint(sa)[1:14,2],0))
g2 <- ggplot(eventPlot.sa)+
geom_pointrange(aes(x=time, y=effect, ymin=lo, ymax=hi))+
geom_hline(aes(yintercept = 0)) +
theme_bw(14)+
xlab("Time")+
scale_x_continuous(breaks=-9:5)+
ylab("Marginal effect")+
geom_vline(aes(xintercept = 0), linetype="dashed", alpha=.4)+
ggtitle("SA estimator")
g2
g3 <- ggdid(aggte(att1.canned, "dynamic")) + ggtitle("ATT_1")
g4 <- ggdid(aggte(att2.canned, "dynamic"))+ ggtitle("ATT_2")
grid.arrange(g1,g2,g3,g4, nrow=2)
eventPlot
event.fit
sa
g1 <- ggplot(eventPlot)+
geom_pointrange(aes(x=time, y=effect, ymin=lo, ymax=hi))+
geom_hline(aes(yintercept = 0)) +
theme_bw(14)+
xlab("Time")+
scale_x_continuous(breaks=-9:5)+
ylab("Marginal effect")+
geom_vline(aes(xintercept = 0), linetype="dashed", alpha=.4)+
ggtitle("'Classic' event study")
g1
g2
g1
g2
eventPlot.sa
colMins(eventPlot.sa)
matrixStats::colMins(eventPlot.sa)
eventPlot
g1 <- ggplot(eventPlot)+
geom_pointrange(aes(x=time, y=effect, ymin=lo, ymax=hi))+
geom_hline(aes(yintercept = 0)) +
theme_bw(14)+
xlab("Time")+
scale_x_continuous(breaks=-9:5)+
ylab("Marginal effect")+
geom_vline(aes(xintercept = 0), linetype="dashed", alpha=.4)+
ggtitle("'Classic' event study")+
ylim(-.6, .25)
g1
grid.arrange(g1,g2,g3,g4, nrow=2)
